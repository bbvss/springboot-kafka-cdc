version: '3.8'

services:
  # Quarkus
  producer:
    image: docker.io/library/kafka-streams-producer:0.0.1-SNAPSHOT
    build:
      context: kafka-streams-producer
      dockerfile: ./src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    hostname: kafka-streams-producer
    container_name: kafka-streams-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  # Quarkus
  aggregator:
    image: docker.io/library/kafka-streams-aggregator:0.0.1-SNAPSHOT
    build:
      context: kafka-streams-aggregator
      dockerfile: ./src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    hostname: kafka-streams-aggregator
    container_name: kafka-streams-aggregator
    depends_on:
      - kafka
    environment:
      QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS: kafka:29092

  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_DOCKER_TAG}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_DOCKER_TAG}
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  sqlserver:
    image: mcr.microsoft.com/mssql/server:${MSSQL_DOCKER_VERSION}
    hostname: sqlserver
    container_name: sqlserver
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: ${ACCEPT_EULA}
      SA_PASSWORD: ${SA_PASSWORD}
      MSSQL_PID: ${MSSQL_PID}
      MSSQL_AGENT_ENABLED: ${MSSQL_AGENT_ENABLED}

  connect:
    image: debezium/connect:${DEBEZIUM_CONNECT_DOCKER_VERSION}
    hostname: connect
    container_name: connect
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - sqlserver
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
